"""
Django settings for vivalviar project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _
from urllib.parse import urlparse
from decouple import config, Csv
from dj_database_url import parse as dburl
from django.contrib.messages import constants as message_constants

import cloudinary
import cloudinary.uploader
import cloudinary.api

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

DEVELOPER = config('DEVELOPER', default=False, cast=bool)

MESSAGE_LEVEL = message_constants.DEBUG

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default=[], cast=Csv())

INTERNAL_IPS = ['127.0.0.1', '0.0.0.0']

ADMINS = [('Alessandro', 'alessandrolimafolk@gmail.com'), ]

AUTH_USER_MODEL = 'authentication.User'

SITE_ID = 1


# Email configuration

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='contato@vivalviar.com.br')
EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')


# Application definition

# Django Apps
APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)
if DEVELOPER:
    APPS += (
        'django.contrib.admindocs',
    )

# Third Parts Apps
APPS += (
    'test_without_migrations',
    'django_extensions',
    'debug_toolbar',
    'versatileimagefield',
    'cloudinary',
)

# Project Apps
APPS += (
    'vivalviar.authentication',
    'vivalviar.core',

    # 'vivalviar.frontend',
)

INSTALLED_APPS = APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'vivalviar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'vivalviar.core.context_processors.consts',
            ],
        },
    },
]

WSGI_APPLICATION = 'vivalviar.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

default_dburl = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')
DATABASES = {
    'default': config('DATABASE_URL', default=default_dburl, cast=dburl),
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# VersatileImageField

# Settings for versatileimagefield
VERSATILEIMAGEFIELD_SETTINGS = {
    # Whether or not to create new images on-the-fly. Set this to `False` for
    # speedy performance but don't forget to 'pre-warm' to ensure they're
    # created and available at the appropriate URL.
    'create_images_on_demand': False,
}

VERSATILEIMAGEFIELD_RENDITION_KEY_SETS = {
    'banner': [
        ('banner_thumbnail_300', 'thumbnail__300x300'),
        ('banner_thumbnail_873', 'thumbnail__873x1280'),
    ],
    'sponsor': [
        ('sponsor_thumbnail', 'thumbnail__350x350'),
    ],
    'special_participation': [
        ('special_participation_crop', 'crop__300x300'),
    ],
    'photo': [
        ('photo_thumbnail_300', 'thumbnail__300x300'),
        ('photo_thumbnail_1080', 'thumbnail__1080x1080'),
    ],
}


cloudinary.config(
    cloud_name=config('CLOUDINARY_CLOUD_NAME'),
    api_key=config('CLOUDINARY_API_KEY'),
    api_secret=config('CLOUDINARY_API_SECRET')
)
